---
name: Build
on:
  push:
    branches:
      - main
  pull_request: 
    branches: 
      - main
  workflow_dispatch:

jobs: 
  extract:
    name: gather and build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Extract current date and time
        id: extract_date_time
        run: |
          current_date=$(date -u +"%Y-%m-%d")
          current_time=$(date -u +"%H:%M:%S UTC")
          echo "Current Date: ${current_date}"
          echo "Current Time: ${current_time}"
          echo "current_date=${current_date}" >> $GITHUB_ENV
          echo "current_time=${current_time}" >> $GITHUB_ENV

      - name: Determine platform type
        run: |
          if [[ $GITHUB_WORKFLOW == *ios* ]]; then
            PLATFORM_TYPE="iOS"
          elif [[ $GITHUB_WORKFLOW == *android* ]]; then
            PLATFORM_TYPE="Android"
          else
            PLATFORM_TYPE="Unknown"
          fi
          echo "PLATFORM_TYPE=$PLATFORM_TYPE" >> $GITHUB_ENV

      - name: Extract label information
        if: contains(github.event.pull_request.labels.*.name, 'Grosvenor') || contains(github.event.pull_request.labels.*.name, 'grosvenor') 
        id: gc-extract_label_info
        run: |
          label_name="Grosvenor"
          label_type=$([[ "${label_name}" == "Mecca" || "${label_name}" == "Grosvenor" ]] && echo "${label_name}" || echo "unknown")
          echo "Label: ${label_name}"
          echo "Type: ${label_type}"
          echo "label_name=${label_name}" >> $GITHUB_ENV
          echo "label_type=${label_type}" >> $GITHUB_ENV

      - name: Extract label information
        if: contains(github.event.pull_request.labels.*.name, 'Mecca') || contains(github.event.pull_request.labels.*.name, 'mecca')
        id: mb-extract_label_info
        run: |
          label_name="Mecca"
          label_type=$([[ "${label_name}" == "Mecca" || "${label_name}" == "Grosvenor" ]] && echo "${label_name}" || echo "unknown")
          echo "Label: ${label_name}"
          echo "Type: ${label_type}"
          echo "label_name=${label_name}" >> $GITHUB_ENV
          echo "label_type=${label_type}" >> $GITHUB_ENV

      - name: Extract last commit hash
        id: extract_commit_hash
        run: |
          last_commit="${{ github.sha }}"
          echo "Last Commit: ${last_commit}"
          echo "last_commit=${last_commit}" >> $GITHUB_ENV
      
      - name: Extract total build time
        id: extract_build_time
        run: |
          build_url="https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          build_info=$(curl -s -H "Accept: application/vnd.github.v3+json" "${build_url}")
          start_time=$(echo "${build_info}" | jq -r '.workflow_run.created_at')
          end_time=$(echo "${build_info}" | jq -r '.workflow_run.updated_at')
          if [ -z "$start_time" ] || [ -z "$end_time" ]; then
            total_build_time=0
          else
            total_build_time=$(($(date -d "${end_time}" +%s) - $(date -d "${start_time}" +%s)))
          fi
          echo "Total Build Time: ${total_build_time} seconds"
          echo "total_build_time=${total_build_time}" >> $GITHUB_ENV

      # - name: Extract pubspec.yaml information
      #   id: extract_pubspec_info
      #   run: |
      #     if [ -f "apps/multichoice/pubspec.yaml" ]; then
      #       pubspec_info=$(cat apps/grosvenor_prod/pubspec.yaml | base64)
      #       echo "Pubspec.yaml Information (base64):"
      #       echo "${pubspec_info}" base64 --decode
      #       echo "pubspec_info=${pubspec_info}" >> $GITHUB_ENV
      #     else
      #       echo "pubspec_info=" >> $GITHUB_ENV
      #     fi

      - name: Read pubspec.yaml contents
        id: read-pubspec
        run: |
          PUBSPEC_CONTENTS=$(cat apps/grosvenor_prod/pubspec.yaml) | base64
          echo "PUBSPEC_CONTENTS<<EOF" >> $GITHUB_ENV
          echo -e "$PUBSPEC_CONTENTS\n" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Write to output.txt
        run: |
          echo "Current Date: ${current_date}" >> output.txt
          echo "Current Time: ${current_time}" >> output.txt
          echo "Platform: $PLATFORM_TYPE" >> output.txt
          echo "Label: ${label_name}" > output.txt
          echo "Type: ${label_type}" >> output.txt
          echo "Last Commit: ${last_commit}" >> output.txt
          echo "Total Build Time: ${total_build_time} seconds" >> output.txt
          echo "------------------------------" >> output.txt
          echo "Pubspec.yaml Information:" >> output.txt
          echo "${PUBSPEC_CONTENTS}" | base64 --decode >> output.txt
          echo "------------------------------" >> output.txt
          echo ""


      - name: Upload output.txt
        id: artifact-upload-step
        uses: actions/upload-artifact@v4
        with:
          name: build-info
          path: output.txt

      - name: Output artifact ID
        run: |
          echo 'Artifact ID is ${{ steps.artifact-upload-step.outputs.artifact-id }}'
          echo 'Artifact URL is ${{ steps.artifact-upload-step.outputs.artifact-url }}'
