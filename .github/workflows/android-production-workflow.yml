name: android-production-pipeline

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to checkout'
        required: true
        default: 'main'
  # pull_request: 
  #   branches: 
  #     - main


jobs:
  deploy:
    name: Deploy to Google Play
    runs-on: macos-13
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{github.event.inputs.branch}}

      #################################
      # Flutter Setup
      #################################
      - name: Setup Flutter
        uses: ./.github/actions/setup-flutter
        
      # - name: Create google-services.json from base64 secret
      #   env:
      #     GC_PROD_GOOGLE_SERVICES_JSON: ${{ secrets.GC_PROD_GOOGLE_SERVICES_JSON }}
      #   shell: bash
      #   run: touch google-services.json && echo $GC_PROD_GOOGLE_SERVICES_JSON | base64 -d > google-services.json
      #   working-directory: apps/grosvenor_prod/android/app/src/production
        
      # - name: Create prod_config.json
      #   env:
      #     GC_PROD_CONFIG_JSON: ${{ secrets.GC_PROD_CONFIG_JSON }}
      #   run: |
      #     touch prod_config.json
      #     echo $GC_PROD_CONFIG_JSON | base64 -d > prod_config.json
      #   working-directory: apps/grosvenor_prod

      # - name: Create uploadkeystore.jks
      #   id: jks_file_again
      #   env:
      #     ANDROID_PASSPHRASE: ${{ secrets.GC_PROD_ANDROID_PASSPHRASE }}
      #     KEY_STORE_FILE: ${{ secrets.GC_PROD_KEY_STORE_FILE }}
      #     KEY_ALIAS: ${{ secrets.GC_PROD_KEY_ALIAS }}
      #   run: |
      #     touch upload-keystore.jks
      #     echo $KEY_STORE_FILE | base64 -d > upload-keystore.jks
      #     echo "storeFile=../../android/upload-keystore.jks" >> key.properties
      #     echo "keyAlias=$KEY_ALIAS" >> key.properties
      #     echo "storePassword=$ANDROID_PASSPHRASE" >> key.properties
      #     echo "keyPassword=$ANDROID_PASSPHRASE" >> key.properties
      #   working-directory: apps/grosvenor_prod/android

      # - name: Create gc-production-fastlane-android-key-file.json
      #   env:
      #     GC_PROD_ANDROID_JSON_KEY_FILE: ${{ secrets.GC_PROD_ANDROID_JSON_KEY_FILE }}
      #   run: |
      #     touch gc-production-fastlane-android-key-file.json
      #     echo $GC_PROD_ANDROID_JSON_KEY_FILE | base64 -d > gc-production-fastlane-android-key-file.json
      #   working-directory: apps/grosvenor_prod/android

      # - name: Remove metadata
      #   run: rm -rf metadata
        
      #################################
      # Ruby & Bundle Install
      #################################
      # - name: Setup Ruby
      #   uses: ./.github/actions/setup-ruby
      #   with:
      #     dir: 'apps/grosvenor_prod/android'
      #################################
      # Rename App
      #################################
      # - name: Rename
      #   run: flutter pub run rename_app:main android="Grosvenor Casino Online Games"
      #   working-directory: ./apps/grosvenor_prod 
      #################################
      # Set pubspec.yaml version
      #################################  
      - name: set pubspec app version
        shell: bash
        run: |
            sed -i '' -E "s/version: ([0-9]+\.[0-9]+\.[0-9]+\+[0-9]+)/version: ${{ secrets.GC_PROD_ANDROID_VERSION }}/" pubspec.yaml
        working-directory: ./apps/grosvenor_prod
  
  extract:
    name: Gather Info and Send Notification
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: | 
            ${{ github.event.inputs.branch || github.event.pull_request.head.ref || github.ref_name }}
      
      - name: Generate File and Send Notification
        uses: ./.github/actions/generate-build-info-with-notification
        with:
          PIPELINE_CLI_CONFIG: ${{ secrets.PIPELINE_CLI_CONFIG }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WORKFLOW: PROD_GC