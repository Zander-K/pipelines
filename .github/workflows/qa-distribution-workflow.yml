# This Pipeline delivers APK and signed IPA builds to the manual qa team for
# the Grosvenor Casino prod Application.
# It runs when a PR is merged into one of the specified branches and has the label 'Grosvenor'

name: qa-distribution-pipeline

on:
  # pull_request:
  #   branches: ["rc-phase1.1", "develop", "rc-gc", "rc-mb"]
  #   types:
  #     - closed
  pull_request:
    types: [opened, synchronize, reopened]
    branches: 
      - '**'

jobs:
  build-apps:
    # if: github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'Grosvenor')
    # if: github.event.pull_request.draft || contains(github.event.pull_request.labels.*.name, 'Grosvenor')
    if: github.event.pull_request.merged == true
    runs-on: macos-13
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      
      #################################
      # Get Latest Release Version
      #################################
      - name: Get Latest Release Version
        env:
          APP_PREFIX: gc
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          OWNER="rankengineering"
          REPO="rank_mobile_core"
          # Fetch latest release information
          latest_release=$(curl -sSL \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/$OWNER/$REPO/releases/latest")
          current_version=$(echo "$latest_release" | jq -r '.tag_name')   
          
          build_name=$(echo "$current_version" | sed -E "s/^${APP_PREFIX}_v_([0-9]+\.[0-9]+\.[0-9]+)\+([0-9]+)$/\1/")
          echo "BUILD_NAME=$build_name" >> $GITHUB_ENV
          
          build_number=$(echo "$current_version" | sed -E "s/^${APP_PREFIX}_v_([0-9]+\.[0-9]+\.[0-9]+)\+([0-9]+)$/\2/")
          echo "BUILD_NUMBER=$build_number" >> $GITHUB_ENV

      #################################
      # Setup Flutter
      #################################
      - name: Setup Flutter
        uses: ./.github/actions/setup-flutter  
      

  extract:
    name: Gather Info and Send Notification
    runs-on: ubuntu-latest
    # needs: build-apps
    # needs: 
    #   - distribute-apk
    #   - distribute-ipa
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: | 
            ${{ github.event.inputs.branch || github.event.pull_request.head.ref || github.ref_name }}
      
      - name: Generate File and Send Notification
        uses: ./.github/actions/generate-build-info-with-notification
        with:
          PIPELINE_CLI_CONFIG: ${{ secrets.PIPELINE_CLI_CONFIG }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WORKFLOW: QA_GC